{"version":3,"sources":["client/components/bussiness/LeftSide/CategoryButton.js","client/components/bussiness/LeftSide/LeftSide.js","client/components/bussiness/coffee/Coffee.js","client/components/bussiness/RightSide/RightSide.js","App.js","server/CoffeeWs.js","reportWebVitals.js","index.js"],"names":["CategoryButton","props","onChangeSelectCategory","category","name","isSelect","className","onClick","defaultProps","LeftSide","categories","searchKey","currentSelectCategory","onChangeSearchKey","placeholder","type","value","onChange","map","id","toString","description","ingredients","title","Coffee","length","out","i","getIngreditionWithFormat","RightSide","filteredCoffeeData","coffee","App","useState","allCoffeesData","setAllCoffeesData","filteredCoffees","setFilteredCoffees","coffeeCategories","setCoffeeCategories","setSearchKey","currentSelectedCategoryName","setCurrentSelectedCategoryName","useEffect","Promise","res","rej","coffees","then","Set","add","forEach","allCategoriesObject","index","key","filteredForCategory","toLowerCase","filter","includes","changeFilteredCoffees","event","target","categoryName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6ba46d5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport '../../../styles/LeftSide.css';\n\n\nfunction CategoryButton(props) {\n  const { onChangeSelectCategory } = props;\n  const {\n        name,\n        isSelect,\n    } = props.category;\n    \n\n  const getButton = () => {\n      if(isSelect) {\n          return <div className=\"Button Active\" onClick={() => onChangeSelectCategory(name)}>{name}</div>;\n      }\n      return <div className=\"Button\" onClick={() => onChangeSelectCategory(name)}>{name}</div>;\n  }\n\n  return getButton();\n}\n\nCategoryButton.propTypes = {\n    name: PropTypes.string,\n    isSelect: PropTypes.bool,\n}\n\nCategoryButton.defaultProps = {\n    name: '',\n    isSelect: false,\n};\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport '../../../styles/LeftSide.css';\nimport CategoryButton from './CategoryButton';\n\n\nfunction LeftSide({\n    categories,\n    currentSelectCategory,\n    searchKey,\n    onChangeSearchKey,\n    onChangeSelectCategory,\n}) {\n    \n\n  return (\n    <div className=\"LeftSideContainer\">\n        <input className=\"Input\"\n            placeholder=\"Search\"\n            type=\"text\"\n            value={searchKey}\n            onChange={onChangeSearchKey} \n        />\n        {\n            categories.map(category => <CategoryButton key={category.id.toString()} category={category} onChangeSelectCategory={onChangeSelectCategory}/>)\n        }\n    </div>\n  );\n}\n\nLeftSide.propTypes = {\n    categories: PropTypes.array,\n    description: PropTypes.string,\n    id: PropTypes.number,\n    ingredients: PropTypes.array,\n    title: PropTypes.string\n}\n\nLeftSide.defaultProps = {\n    categories: [],\n    description: '',\n    id: -1,\n    ingredients: [],\n    title: '',\n};\nexport default LeftSide;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport '../../../styles/Coffee.css';\n\n\nfunction Coffee({\n    category,\n    description,\n    id,\n    ingredients,\n    title\n}) {\n\n    const getIngreditionWithFormat = () => {\n        if (ingredients && ingredients.length > 0) {\n            let out = ingredients[0];\n\n            for(let i = 1; i < ingredients.length; i++) {\n                out += `, ${ingredients[i]}`;\n            }\n\n            return out;\n        }\n\n        return '';\n    }\n\n\n  return (\n    <div className=\"CoffeeContainer\">\n        <div className=\"Title\">{title}</div>\n        <div className=\"Description\">{description}</div>\n        <div className=\"Ingredients\">Ingreditions: {getIngreditionWithFormat()}</div>\n    </div>\n  );\n}\n\nCoffee.propTypes = {\n    category: PropTypes.string,\n    description: PropTypes.string,\n    id: PropTypes.number,\n    ingredients: PropTypes.array,\n    title: PropTypes.string\n}\n\nCoffee.defaultProps = {\n    category: '',\n    description: '',\n    id: -1,\n    ingredients: [],\n    title: '',\n};\nexport default Coffee;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport '../../../styles/RightSide.css';\nimport Coffee from '../coffee/Coffee';\n\n\nfunction RightSide({\n    filteredCoffeeData,\n}) {\n\n  return (\n    <div className=\"RightSideContainer\">\n      {\n        filteredCoffeeData.map(coffee => {\n          return <Coffee \n            title={coffee.title}\n            description ={coffee.description}\n            ingredients ={coffee.ingredients}\n            category = {coffee.category}\n            id = {coffee.id}\n            key={coffee.id.toString()}\n          />\n        })\n      }\n    </div>\n  );\n}\n\nRightSide.propTypes = {\n    filteredCoffeeData: PropTypes.array\n}\n\nRightSide.defaultProps = {\n    filteredCoffeeData: [],\n};\nexport default RightSide;\n","import React, { useEffect, useState } from 'react';\nimport { getCoffees } from './server/CoffeeWs';\nimport './App.css';\nimport LeftSide from './client/components/bussiness/LeftSide/LeftSide';\nimport RightSide from './client/components/bussiness/RightSide/RightSide';\n\nfunction App() {\n  const [allCoffeesData, setAllCoffeesData] = useState([])\n  const [filteredCoffees, setFilteredCoffees] = useState([])\n  const [coffeeCategories, setCoffeeCategories] = useState([])\n  const [searchKey, setSearchKey] = useState('');\n  const [currentSelectedCategoryName, setCurrentSelectedCategoryName] = useState('');\n\n  useEffect(() => {\n    getCoffees().then((res) => {\n      const categories = new Set();\n\n      if(res && res.length > 0) {\n        categories.add('all coffees');\n        res.forEach(coffee => categories.add(coffee.category))\n      }\n      setAllCoffeesData(res);\n      setFilteredCoffees(res);\n      \n      const tempCategoriesArr = [...categories];\n      const allCategoriesObject = tempCategoriesArr.map((category, index) => {\n        return {\n          id: index,\n          name: category,\n          isSelect: false,\n        }\n      })\n      setCoffeeCategories(allCategoriesObject);\n    })\n  }, [])\n\n  useEffect(() => {\n     function changeFilteredCoffees(key) {\n      let filteredForCategory = [];\n  \n      if(currentSelectedCategoryName.toLowerCase() === 'all coffees' || currentSelectedCategoryName.toLowerCase() === '') {\n        filteredForCategory = [...allCoffeesData];\n      } else {\n        filteredForCategory = allCoffeesData.filter(coffee => coffee.category.toLowerCase() === currentSelectedCategoryName.toLowerCase())\n      }\n  \n  \n      if (key === '') {\n        setFilteredCoffees([...filteredForCategory]);\n      } else {\n        setFilteredCoffees([...filteredForCategory.filter(coffee => coffee.title.toLowerCase().includes(key.toLowerCase()))]);\n      }\n    }\n\n    changeFilteredCoffees(searchKey);\n  }, [searchKey, currentSelectedCategoryName, allCoffeesData])\n\n  const searchInputOnChange = (event) => {\n    setSearchKey(event.target.value);\n  }\n\n  const onChangeSelectCategory= (categoryName) => {\n    coffeeCategories.forEach(category => {\n      if(category.name.toLowerCase() === categoryName.toLowerCase()) {\n        if(category.isSelect) {\n          category.isSelect = false;\n          setCurrentSelectedCategoryName('');\n        } else {\n          category.isSelect = true;\n          setCurrentSelectedCategoryName(categoryName);\n        }\n      } else {\n        category.isSelect = false;\n      }\n    })\n  }\n\n  \n\n  return (\n    <div className=\"AppContainer\">\n      <LeftSide categories={coffeeCategories}\n        searchKey={searchKey}\n        onChangeSearchKey={searchInputOnChange}\n        onChangeSelectCategory={onChangeSelectCategory} />\n      <RightSide filteredCoffeeData={filteredCoffees} />\n    </div>\n  );\n}\n\nexport default App;","import coffees from '../client/mock/coffees.json'\n\nexport const getCoffees = () => {\n    return new Promise((res, rej) => {\n        return res(coffees)\n    })\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}